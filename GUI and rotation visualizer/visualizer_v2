from vpython import *
from time import *
import numpy as np
import math
import socket

UDP_IP = "192.168.1.204"
UDP_PORT = 5005
sock = socket.socket(socket.AF_INET, # Internetwhere 
                        socket.SOCK_DGRAM) # UDP
sock.bind((UDP_IP, UDP_PORT))
sleep(1)


scene.range=5
scene.background=color.yellow
toRad=2*np.pi/360
toDeg=1/toRad
scene.forward=vector(-1,-1,-1)

scene.width=1200
scene.height=1080

xarrow=arrow(lenght=2, shaftwidth=0.1, color=color.red,axis=vector(1,0,0))
yarrow=arrow(lenght=2, shaftwidth=0.1, color=color.green,axis=vector(0,1,0))
zarrow=arrow(lenght=4, shaftwidth=0.1, color=color.blue,axis=vector(0,0,1))

frontArrow=arrow(length=4,shaftwidth=0.1,color=color.purple,axis=vector(1,0,0))
upArrow=arrow(length=1,shaftwidth=0.1,color=color.magenta,axis=vector(0,1,0))
sideArrow=arrow(length=2,shaftwidth=0.1,color=color.orange,axis=vector(0,0,1))

bBoard=box(length=6,width=2,height=0.2,opacity=.8,pos=vector(0,0,0,))
bn=box(length=1,width=0.75,height=0.1, pos=vector(-0.5,0.1+0.05,0),color=color.blue)
nano=box(lenght=1.75,width=0.6,height=0.1,pos=vector(-2,0.1+0.05,0),color=color.green)
myObj=compound([bBoard,bn,nano])
while (True):
    try:
        data, addr = sock.recvfrom(1024) # buffer size is 1024 bytes
        line = data.decode('UTF-8').replace('\n', '')
        print(line)
        q0 = float(line.split('w')[1])
        q1 = float(line.split('a')[1])
        q2 = float(line.split('b')[1])
        q3 = float(line.split('c')[1])

        roll=-math.atan2(2*(q0*q1+q2*q3),1-2*(q1*q1+q2*q2))
        pitch=math.asin(2*(q0*q2-q3*q1))
        yaw=-math.atan2(2*(q0*q3+q1*q2),1-2*(q2*q2+q3*q3))-np.pi/2

        rate(50)
        k=vector(cos(yaw)*cos(pitch), sin(pitch),sin(yaw)*cos(pitch))
        y=vector(0,1,0)
        s=cross(k,y)
        v=cross(s,k)
        vrot=v*cos(roll)+cross(k,v)*sin(roll)

        frontArrow.axis=k
        sideArrow.axis=cross(k,vrot)
        upArrow.axis=vrot
        myObj.axis=k
        myObj.up=vrot
        sideArrow.length=2
        frontArrow.length=4
        upArrow.length=1
    except:
        pass